consumes:
- application/json
definitions:
  Attachment:
    description: Describes a service through video, pictures...
    properties:
      href:
        description: Reference of the attachment
        type: string
      id:
        description: Unique identifier of the attachment
        type: string
      type:
        description: Attachment type such as video, picture
        type: string
      url:
        description: Uniform Resource Locator, is a web page address (a subset of
          URI)
        type: string
    type: object
  BundledServiceCandidate:
    description: A type of ServiceCandidate that belongs to a grouping of ServiceCandidates
      made available to the market. It inherits of all attributes of ServiceCandidate.
    properties:
      href:
        description: Unique reference of the BundledServiceCandidate
        type: string
      id:
        description: Unique identifier of the BundledServiceCandidate
        type: string
      lifecycleStatus:
        description: Used to indicate the current lifecycle status
        type: string
      name:
        description: Name of the BundledServiceCandidate
        type: string
    type: object
  BundledServiceSpecification:
    description: A type of ServiceSpecification that belongs to a grouping of ServiceSpecifications
      made available to the market. It inherits of all attributes of ServiceSpecification.
    properties:
      href:
        description: Reference of the service specification
        type: string
      id:
        description: Unique identifier of the service specification
        type: string
      lifecycleStatus:
        description: Used to indicate the current lifecycle status
        type: string
      name:
        description: Name of the service specification
        type: string
    type: object
  Catalog:
    description: A collection of Service Candidates.
    properties:
      category:
        items:
          $ref: '#/definitions/CategoryRef'
        type: array
      href:
        description: Unique reference of the catalog
        type: string
      id:
        description: Unique identifier of the Catalog
        type: string
      lastUpdate:
        description: Date and time of the last update
        format: date-time
        type: string
      lifecycleStatus:
        description: Used to indicate the current lifecycle status
        type: string
      name:
        description: Name of the catalog
        type: string
      relatedParty:
        items:
          $ref: '#/definitions/RelatedPartyRef'
        type: array
      type:
        description: Indicates if the catalog is a service, service or resource catalog
        type: string
      validFor:
        $ref: '#/definitions/TimePeriod'
      version:
        description: Catalog version
        type: string
    type: object
  CatalogChangeBatchNotification:
    description: TheCatalogChangeBatch notification is sent to each listener who has
      subscribed to receive it.
    properties:
      event:
        $ref: '#/definitions/CatalogEvent'
      eventId:
        description: Identifier of the event
        type: string
      eventTime:
        description: Creation date of the event
        format: date-time
        type: string
      eventType:
        description: Type of event
        type: string
      fieldPath:
        description: details which field is missing, its structure is quite similar
          to GET filter criteria
        type: string
      resourcePath:
        description: To indicate which entity is concerned
        type: string
    type: object
  CatalogChangeNotification:
    description: TheCatalogChange notification is sent to each listener who has subscribed
      to receive it.
    properties:
      event:
        $ref: '#/definitions/CatalogEvent'
      eventId:
        description: Identifier of the event
        type: string
      eventTime:
        description: Creation date of the event
        format: date-time
        type: string
      eventType:
        description: Type of event
        type: string
      fieldPath:
        description: details which field is missing, its structure is quite similar
          to GET filter criteria
        type: string
      resourcePath:
        description: To indicate which entity is concerned
        type: string
    type: object
  CatalogEvent:
    description: The Catalog event is generated each time a catalog is updated.
    properties:
      catalog:
        $ref: '#/definitions/Catalog'
    type: object
  Category:
    description: The category resource is used to group service candidates, service
      and resource candidates in logical containers. Categories can contain other
      categories and/or service candidates, resource or service candidates.
    properties:
      description:
        description: Description of the category
        type: string
      href:
        description: Reference of the catalog
        type: string
      id:
        description: Unique identifier of the category
        type: string
      isRoot:
        description: If true, this Boolean indicates that the category is a root of
          categories
        type: boolean
      lastUpdate:
        description: Date and time of the last update
        format: date-time
        type: string
      lifecycleStatus:
        description: Used to indicate the current lifecycle status
        type: string
      name:
        description: Name of the category
        type: string
      parentId:
        description: Unique identifier of the parent category
        type: string
      validFor:
        $ref: '#/definitions/TimePeriod'
      version:
        description: Category version
        type: string
    type: object
  Category_Create:
    description: |-
      The category resource is used to group service candidates, service and resource candidates in logical containers. Categories can contain other categories and/or service candidates, resource or service candidates.
      Skipped properties: id,href
    properties:
      description:
        description: Description of the category
        type: string
      isRoot:
        description: If true, this Boolean indicates that the category is a root of
          categories
        type: boolean
      lastUpdate:
        description: Date and time of the last update
        format: date-time
        type: string
      lifecycleStatus:
        description: Used to indicate the current lifecycle status
        type: string
      name:
        description: Name of the category
        type: string
      parentId:
        description: Unique identifier of the parent category
        type: string
      validFor:
        $ref: '#/definitions/TimePeriod'
      version:
        description: Category version
        type: string
    required:
    - name
    - parentId
    type: object
  Category_Update:
    description: |-
      The category resource is used to group service candidates, service and resource candidates in logical containers. Categories can contain other categories and/or service candidates, resource or service candidates.
      Skipped properties: id,href,id,lastUpdate
    properties:
      description:
        description: Description of the category
        type: string
      isRoot:
        description: If true, this Boolean indicates that the category is a root of
          categories
        type: boolean
      lifecycleStatus:
        description: Used to indicate the current lifecycle status
        type: string
      name:
        description: Name of the category
        type: string
      parentId:
        description: Unique identifier of the parent category
        type: string
      validFor:
        $ref: '#/definitions/TimePeriod'
      version:
        description: Category version
        type: string
    type: object
  CategoryRef:
    description: Category reference. The category resource is used to group service
      candidates, service and resource candidates in logical containers. Categories
      can contain other categories and/or service candidates, resource or service
      candidates.
    properties:
      href:
        description: Unique reference of the category
        type: string
      id:
        description: Unique reference of the category
        type: string
      name:
        description: Name of the category
        type: string
      version:
        description: Category version
        type: string
    type: object
  Error:
    properties:
      code:
        description: An integer coding the error type. This is given to caller so
          he can translate them if required.
        type: integer
      description:
        description: (optional) A long localized error description if needed. It can
          contain precise information about which parameter is missing, or what are
          the identifier acceptable values.
        type: string
      infoURL:
        description: (optional) A URL to online documentation that provides more information
          about the error.
        type: string
      message:
        description: A short localized string that describes the error.
        type: string
    required:
    - code
    - message
  EventSubscription:
    properties:
      callback:
        description: The callback being registered.
        type: string
      id:
        description: Id of the listener
        type: string
      query:
        description: additional data to be passed
        type: string
    required:
    - id
    - callback
  EventSubscriptionInput:
    properties:
      callback:
        description: The callback being registered.
        type: string
      query:
        description: additional data to be passed
        type: string
    required:
    - callback
  PlaceRef:
    description: Place reference. Place defines the places where the service candidates
      are sold.
    properties:
      href:
        description: Unique reference of the place
        type: string
      id:
        description: Unique identifier of the place
        type: string
      name:
        description: Name of the place
        type: string
    type: object
  RelatedPartyRef:
    description: RelatedParty reference. RelatedParty defines party or party role
      linked to a specific entity.
    properties:
      href:
        description: Reference of the related party, could be a party reference or
          a partyRole reference
        type: string
      id:
        description: Unique identifier of a related party
        type: string
      name:
        description: Name of the related party
        type: string
      role:
        description: Role of the related party.
        type: string
      validFor:
        $ref: '#/definitions/TimePeriod'
    type: object
  ResourceCandidateRef:
    description: 'ResourceCandidate reference: A resource candidate is an entity that
      makes a ResourceSpecification available to a catalog.'
    properties:
      href:
        description: Reference of the resource candidate
        type: string
      id:
        description: Unique identifier of the resource candidate
        type: string
      name:
        description: Name of the resource candidate
        type: string
      version:
        description: Version of the resource candidate
        type: string
    type: object
  ResourceSpecificationRef:
    description: 'Resource Specification reference: The ResourceSpecification is required
      to realize a ServiceSpecification.'
    properties:
      href:
        description: Reference of the resource specification
        type: string
      id:
        description: Unique identifier of the resource specification
        type: string
      name:
        description: Name of the requiredResourceSpecification
        type: string
      version:
        description: Resource specification version
        type: string
    type: object
  ServiceCandidate:
    description: Represents entities that may be ordered from the provider of the
      catalog.
    properties:
      bundledServiceCandidate:
        items:
          $ref: '#/definitions/BundledServiceCandidate'
        type: array
      category:
        items:
          $ref: '#/definitions/CategoryRef'
        type: array
      description:
        description: Description of the serviceCandidate
        type: string
      href:
        description: Reference of the ServiceCandidate
        type: string
      id:
        description: Unique identifier of the serviceCandidate
        type: string
      isBundle:
        description: isBundle determines whether a serviceCandidate represents a single
          serviceCandidate (false), or a bundle of serviceCandidates (true).
        type: boolean
      lastUpdate:
        description: Date and time of the last update
        format: date-time
        type: string
      lifecycleStatus:
        description: Used to indicate the current lifecycle status
        type: string
      name:
        description: Name of the serviceCandidate
        type: string
      resourceCandidate:
        $ref: '#/definitions/ResourceCandidateRef'
      serviceCandidateTerm:
        items:
          $ref: '#/definitions/ServiceCandidateTerm'
        type: array
      serviceSpecification:
        $ref: '#/definitions/ServiceSpecificationRef'
      validFor:
        $ref: '#/definitions/TimePeriod'
      version:
        description: ServiceCandidate version
        type: string
    type: object
  ServiceCandidate_Create:
    description: |-
      Represents entities that are orderable from the provider of the catalog.
      Skipped properties: id,href
    properties:
      bundledServiceCandidate:
        items:
          $ref: '#/definitions/BundledServiceCandidate'
        type: array
      category:
        items:
          $ref: '#/definitions/CategoryRef'
        type: array
      description:
        description: Description of the serviceCandidate
        type: string
      isBundle:
        description: isBundle determines whether a serviceCandidate represents a single
          serviceCandidate (false), or a bundle of serviceCandidates (true).
        type: boolean
      lastUpdate:
        description: Date and time of the last update
        format: date-time
        type: string
      lifecycleStatus:
        description: Used to indicate the current lifecycle status
        type: string
      name:
        description: Name of the serviceCandidate
        type: string
      resourceCandidate:
        $ref: '#/definitions/ResourceCandidateRef'
      serviceCandidateTerm:
        items:
          $ref: '#/definitions/ServiceCandidateTerm'
        type: array
      serviceSpecification:
        $ref: '#/definitions/ServiceSpecificationRef'
      validFor:
        $ref: '#/definitions/TimePeriod'
      version:
        description: ServiceCandidate version
        type: string
    required:
    - name
    - bundledServiceCandidate
    - serviceSpecification
    type: object
  ServiceCandidate_Update:
    description: |-
      Represents entities that are orderable from the provider of the catalog.
      Skipped properties: id,href,id,lastUpdate
    properties:
      bundledServiceCandidate:
        items:
          $ref: '#/definitions/BundledServiceCandidate'
        type: array
      category:
        items:
          $ref: '#/definitions/CategoryRef'
        type: array
      description:
        description: Description of the serviceCandidate
        type: string
      isBundle:
        description: isBundle determines whether a serviceCandidate represents a single
          serviceCandidate (false), or a bundle of serviceCandidates (true).
        type: boolean
      lifecycleStatus:
        description: Used to indicate the current lifecycle status
        type: string
      name:
        description: Name of the serviceCandidate
        type: string
      resourceCandidate:
        $ref: '#/definitions/ResourceCandidateRef'
      serviceCandidateTerm:
        items:
          $ref: '#/definitions/ServiceCandidateTerm'
        type: array
      serviceSpecification:
        $ref: '#/definitions/ServiceSpecificationRef'
      validFor:
        $ref: '#/definitions/TimePeriod'
      version:
        description: ServiceCandidate version
        type: string
    type: object
  ServiceCandidateRef:
    description: ServiceCandidate reference. ServiceCandidate is an entity that makes
      a ServiceSpecification available to a catalog.
    properties:
      href:
        description: Unique reference of the service candidate
        type: string
      id:
        description: Unique identifier of the service candidate
        type: string
      name:
        description: Name of the service candidate
        type: string
      version:
        description: Version of the service candidate
        type: string
    type: object
  ServiceCandidateTerm:
    description: A condition under which a ServiceCandidate is made available to Service
      Delivery Partners. For instance, a serviceCandidate can be offered with multiple
      commitment periods.
    properties:
      description:
        description: Description of the serviceCandidateTerm
        type: string
      duration:
        description: Duration of the serviceCandidateTerm
        type: string
      name:
        description: Name of the serviceCandidateTerm
        type: string
      validFor:
        $ref: '#/definitions/TimePeriod'
    type: object
  ServiceSpecCharRelationship:
    description: An aggregation, migration, substitution, dependency or exclusivity
      relationship between/among serviceSpecCharacteristics.
    properties:
      type:
        description: Type of relationship such as aggregation, migration, substitution,
          dependency, exclusivity
        type: string
      validFor:
        $ref: '#/definitions/TimePeriod'
    type: object
  ServiceSpecCharacteristic:
    description: A characteristic quality or distinctive feature of a ServiceSpecification.  The
      characteristic can be take on a discrete value, such as color, can take on a
      range of values, (for example, sensitivity of 100-240 mV), or can be derived
      from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain
      characteristics, such as color, may be configured during the ordering or some
      other process.
    properties:
      configurable:
        description: If true, the Boolean indicates that the serviceSpecCharacteristic
          is configurable
        type: boolean
      description:
        description: A narrative that explains in detail what the serviceSpecCharacteristic
          is
        type: string
      name:
        description: Name of the serviceSpecCharacteristic
        type: string
      serviceSpecCharRelationship:
        items:
          $ref: '#/definitions/ServiceSpecCharRelationship'
        type: array
      serviceSpecCharacteristicValue:
        items:
          $ref: '#/definitions/ServiceSpecCharacteristicValue'
        type: array
      validFor:
        $ref: '#/definitions/TimePeriod'
      valueType:
        description: A kind of value that the characteristic can take on, such as
          numeric, text and so forth
        type: string
    type: object
  ServiceSpecCharacteristicValue:
    description: A number or text that can be assigned to a ServiceSpecCharacteristic.
    properties:
      default:
        description: Indicates if the value is the default value for a characteristic
        type: boolean
      unitOfMeasure:
        description: Could be minutes, GB...
        type: string
      validFor:
        $ref: '#/definitions/TimePeriod'
      value:
        description: A discrete value that the characteristic can take on
        type: string
      valueFrom:
        description: The low range value that a characteristic can take on
        type: string
      valueTo:
        description: The upper range value that a characteristic can take on
        type: string
      valueType:
        description: A kind of value that the characteristic can take on, such as
          numeric, text, and so forth
        type: string
    type: object
  ServiceSpecification:
    description: Is a detailed description of a tangible or intangible object made
      available externally in the form of a ServiceCandidate to service delivery partners
      or other parties playing a party role.
    properties:
      attachment:
        items:
          $ref: '#/definitions/Attachment'
        type: array
      bundledServiceSpecification:
        items:
          $ref: '#/definitions/BundledServiceSpecification'
        type: array
      description:
        description: A narrative that explains in detail what the service specification
          is
        type: string
      href:
        description: Reference of the service specification
        type: string
      id:
        description: Unique identifier of the service specification
        type: string
      isBundle:
        description: isBundle determines whether a serviceSpecification represents
          a single serviceSpecification (false), or a bundle of serviceSpecification
          (true).
        type: boolean
      lastUpdate:
        description: Date and time of the last update
        format: date-time
        type: string
      lifecycleStatus:
        description: Used to indicate the current lifecycle status
        type: string
      name:
        description: Name of the service specification
        type: string
      relatedParty:
        items:
          $ref: '#/definitions/RelatedPartyRef'
        type: array
      resourceSpecification:
        items:
          $ref: '#/definitions/ResourceSpecificationRef'
        type: array
      serviceNumber:
        description: An identification number assigned to uniquely identity the specification
        type: string
      serviceSpecCharacteristic:
        items:
          $ref: '#/definitions/ServiceSpecCharacteristic'
        type: array
      serviceSpecificationRelationship:
        items:
          $ref: '#/definitions/ServiceSpecificationRelationship'
        type: array
      type:
        description: 'Type of the service specification '
        type: string
      validFor:
        $ref: '#/definitions/TimePeriod'
      version:
        description: Service specification version
        type: string
    type: object
  ServiceSpecification_Create:
    description: |-
      Is a detailed description of a tangible or intangible object made available externally in the form of a ServiceCandidate to service delivery partners or other parties playing a party role.
      Skipped properties: id,href
    properties:
      attachment:
        items:
          $ref: '#/definitions/Attachment'
        type: array
      bundledServiceSpecification:
        items:
          $ref: '#/definitions/BundledServiceSpecification'
        type: array
      description:
        description: A narrative that explains in detail what the service specification
          is
        type: string
      isBundle:
        description: isBundle determines whether a serviceSpecification represents
          a single serviceSpecification (false), or a bundle of serviceSpecification
          (true).
        type: boolean
      lastUpdate:
        description: Date and time of the last update
        format: date-time
        type: string
      lifecycleStatus:
        description: Used to indicate the current lifecycle status
        type: string
      name:
        description: Name of the service specification
        type: string
      relatedParty:
        items:
          $ref: '#/definitions/RelatedPartyRef'
        type: array
      resourceSpecification:
        items:
          $ref: '#/definitions/ResourceSpecificationRef'
        type: array
      serviceNumber:
        description: An identification number assigned to uniquely identity the specification
        type: string
      serviceSpecCharacteristic:
        items:
          $ref: '#/definitions/ServiceSpecCharacteristic'
        type: array
      serviceSpecificationRelationship:
        items:
          $ref: '#/definitions/ServiceSpecificationRelationship'
        type: array
      type:
        description: 'Type of the service specification '
        type: string
      validFor:
        $ref: '#/definitions/TimePeriod'
      version:
        description: Service specification version
        type: string
    required:
    - name
    - bundledServiceSpecification
    - serviceSpecCharacteristic
    type: object
  ServiceSpecification_Update:
    description: |-
      Is a detailed description of a tangible or intangible object made available externally in the form of a ServiceCandidate to service delivery partners or other parties playing a party role.
      Skipped properties: id,href,id,lastUpdate
    properties:
      attachment:
        items:
          $ref: '#/definitions/Attachment'
        type: array
      bundledServiceSpecification:
        items:
          $ref: '#/definitions/BundledServiceSpecification'
        type: array
      description:
        description: A narrative that explains in detail what the service specification
          is
        type: string
      isBundle:
        description: isBundle determines whether a serviceSpecification represents
          a single serviceSpecification (false), or a bundle of serviceSpecification
          (true).
        type: boolean
      lifecycleStatus:
        description: Used to indicate the current lifecycle status
        type: string
      name:
        description: Name of the service specification
        type: string
      relatedParty:
        items:
          $ref: '#/definitions/RelatedPartyRef'
        type: array
      resourceSpecification:
        items:
          $ref: '#/definitions/ResourceSpecificationRef'
        type: array
      serviceNumber:
        description: An identification number assigned to uniquely identity the specification
        type: string
      serviceSpecCharacteristic:
        items:
          $ref: '#/definitions/ServiceSpecCharacteristic'
        type: array
      serviceSpecificationRelationship:
        items:
          $ref: '#/definitions/ServiceSpecificationRelationship'
        type: array
      type:
        description: 'Type of the service specification '
        type: string
      validFor:
        $ref: '#/definitions/TimePeriod'
      version:
        description: Service specification version
        type: string
    type: object
  ServiceSpecificationRef:
    description: 'Service specification reference: A ServiceSpecification is a detailed
      description of a tangible or intangible object made available externally in
      the form of a ServiceCandidate to service delivery partners or other parties
      playing a party role.'
    properties:
      href:
        description: Reference of the service specification
        type: string
      id:
        description: Unique identifier of the service specification
        type: string
      name:
        description: Name of the service specification
        type: string
      version:
        description: Version of the service specification
        type: string
    type: object
  ServiceSpecificationRelationship:
    description: A migration, substitution, dependency or exclusivity relationship
      between/among service specifications.
    properties:
      href:
        description: Reference of the serviceSpecification
        type: string
      id:
        description: Unique identifier of the serviceSpecification
        type: string
      type:
        description: Type of relationship such as migration, substitution, dependency,
          exclusivity
        type: string
      validFor:
        $ref: '#/definitions/TimePeriod'
    type: object
  TimePeriod:
    description: A base / value business entity used to represent a period of time
      between two timepoints.
    properties:
      endDateTime:
        description: An instant of time, ending at the TimePeriod.
        format: date-time
        type: string
      startDateTime:
        description: An instant of time, starting at the TimePeriod
        format: date-time
        type: string
    type: object
host: env-0693795.jelastic.servint.net
info:
  description: The Service Catalog Management API allows the management of the entire
    lifecycle of the service catalog elements.
  title: Service Catalog Management
  version: 16.5.1
  x-lastModified: Oct 17, 2017 03:11AM PST
paths:
  /category:
    get:
      operationId: listCategory
      parameters:
      - description: Comma separated properties to display in response
        format: ""
        in: query
        name: fields
        required: false
        type: string
      - description: 'For filtering: Date and time of the last update'
        format: date-time
        in: query
        name: lastUpdate
        required: false
        type: string
      - description: 'For filtering: Category version'
        format: ""
        in: query
        name: version
        required: false
        type: string
      - description: 'For filtering: Used to indicate the current lifecycle status'
        format: ""
        in: query
        name: lifecycleStatus
        required: false
        type: string
      - description: 'For filtering: An instant of time, starting at the TimePeriod'
        format: date-time
        in: query
        name: validFor.startDateTime
        required: false
        type: string
      - description: 'For filtering: An instant of time, ending at the TimePeriod.'
        format: date-time
        in: query
        name: validFor.endDateTime
        required: false
        type: string
      - description: 'For filtering: Unique identifier of the parent category'
        format: ""
        in: query
        name: parentId
        required: false
        type: string
      - description: 'For filtering: If true, this Boolean indicates that the category
          is a root of categories'
        format: ""
        in: query
        name: isRoot
        required: false
        type: boolean
      - description: 'For filtering: Name of the category'
        format: ""
        in: query
        name: name
        required: false
        type: string
      responses:
        "200":
          description: Ok
          schema:
            items:
              $ref: '#/definitions/Category'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: List or find 'Category' objects
      tags:
      - category
    post:
      operationId: createCategory
      parameters:
      - description: The Category to be created
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/Category_Create'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Creates a 'Category'
      tags:
      - category
  /category/{id}:
    get:
      operationId: retrieveCategory
      parameters:
      - description: Identifier of the Category
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Ok
          schema:
            items:
              $ref: '#/definitions/Category'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Retrieves a 'Category' by Id
      tags:
      - category
    patch:
      operationId: updateCategoryPatch
      parameters:
      - description: Identifier of the Category
        in: path
        name: id
        required: true
        type: string
      - description: The Category to be updated
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/Category_Update'
      responses:
        "201":
          description: Updated
          schema:
            $ref: '#/definitions/Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Updates partially a 'Category' by Id
      tags:
      - category
    put:
      operationId: updateCategory
      parameters:
      - description: Identifier of the Category
        in: path
        name: id
        required: true
        type: string
      - description: The Category to be updated
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/Category_Update'
      responses:
        "201":
          description: Updated
          schema:
            $ref: '#/definitions/Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Updates a 'Category' by Id
      tags:
      - category
  /hub:
    post:
      description: Sets the communication endpoint address the service instance must
        use to deliver information about its health state, execution state, failures
        and metrics.
      operationId: registerListener
      parameters:
      - description: Data containing the callback endpoint to deliver the information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/EventSubscriptionInput'
      responses:
        "201":
          description: Subscribed
          schema:
            $ref: '#/definitions/EventSubscription'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Register a listener
      tags:
      - events subscription
  /hub/{id}:
    delete:
      description: Resets the communication endpoint address the service instance
        must use to deliver information about its health state, execution state, failures
        and metrics.
      operationId: unregisterListener
      parameters:
      - description: The id of the registered listener
        in: path
        name: id
        required: true
        type: string
      responses:
        "201":
          description: Unsubscribed
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Unregister a listener
      tags:
      - events subscription
  /listener/catalogChangeBatchNotification:
    post:
      operationId: publishCatalogChangeBatchNotification
      parameters:
      - description: The Catalog Change Batch Notification to be published
        in: body
        name: catalogChangeBatchNotification
        required: true
        schema:
          $ref: '#/definitions/CatalogChangeBatchNotification'
      responses:
        "201":
          description: Published
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Publishes a 'CatalogChangeBatchNotification'
      tags:
      - events publication
  /listener/catalogChangeNotification:
    post:
      operationId: publishCatalogChangeNotification
      parameters:
      - description: The Catalog Change Notification to be published
        in: body
        name: catalogChangeNotification
        required: true
        schema:
          $ref: '#/definitions/CatalogChangeNotification'
      responses:
        "201":
          description: Published
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Publishes a 'CatalogChangeNotification'
      tags:
      - events publication
  /serviceCandidate:
    get:
      operationId: listServiceCandidate
      parameters:
      - description: Comma separated properties to display in response
        in: query
        name: fields
        required: false
        type: string
      - description: 'For filtering: ServiceCandidate version'
        in: query
        name: version
        required: false
        type: string
      - description: 'For filtering: Date and time of the last update'
        format: date-time
        in: query
        name: lastUpdate
        required: false
        type: string
      - description: 'For filtering: Name of the serviceCandidate'
        in: query
        name: name
        required: false
        type: string
      - description: 'For filtering: isBundle determines whether a serviceCandidate
          represents a single serviceCandidate (false), or a bundle of serviceCandidates
          (true).'
        in: query
        name: isBundle
        required: false
        type: boolean
      - description: 'For filtering: Used to indicate the current lifecycle status'
        in: query
        name: lifecycleStatus
        required: false
        type: string
      - description: 'For filtering: An instant of time, starting at the TimePeriod'
        format: date-time
        in: query
        name: validFor.startDateTime
        required: false
        type: string
      - description: 'For filtering: An instant of time, ending at the TimePeriod.'
        format: date-time
        in: query
        name: validFor.endDateTime
        required: false
        type: string
      - description: 'For filtering: Version of the service specification'
        in: query
        name: serviceSpecification.version
        required: false
        type: string
      - description: 'For filtering: Name of the service specification'
        in: query
        name: serviceSpecification.name
        required: false
        type: string
      - description: 'For filtering: Type of the service specification'
        in: query
        name: serviceSpecification.type
        required: false
        type: string
      - description: 'For filtering: Version of the service candidate'
        in: query
        name: serviceCandidate.version
        required: false
        type: string
      - description: 'For filtering: Name of the service candidate'
        in: query
        name: serviceCandidate.name
        required: false
        type: string
      - description: 'For filtering: Category version'
        in: query
        name: category.version
        required: false
        type: string
      - description: 'For filtering: Name of the category'
        in: query
        name: category.name
        required: false
        type: string
      - description: 'For filtering: Version of the resource candidate'
        in: query
        name: resourceCandidate.version
        required: false
        type: string
      - description: 'For filtering: Name of the resource candidate'
        in: query
        name: resourceCandidate.name
        required: false
        type: string
      - description: 'For filtering: Used to indicate the current lifecycle status'
        in: query
        name: bundledServiceCandidate.lifecycleStatus
        required: false
        type: string
      - description: 'For filtering: Name of the BundledServiceCandidate'
        in: query
        name: bundledServiceCandidate.name
        required: false
        type: string
      - description: 'For filtering: Name of the serviceCandidateTerm'
        in: query
        name: serviceCandidateTerm.name
        required: false
        type: string
      - description: 'For filtering: Duration of the serviceCandidateTerm'
        in: query
        name: serviceCandidateTerm.duration
        required: false
        type: string
      responses:
        "200":
          description: Ok
          schema:
            items:
              $ref: '#/definitions/ServiceCandidate'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: List or find 'ServiceCandidate' objects
      tags:
      - serviceCandidate
    post:
      operationId: createServiceCandidate
      parameters:
      - description: The Service Candidate to be created
        in: body
        name: serviceCandidate
        required: true
        schema:
          $ref: '#/definitions/ServiceCandidate_Create'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ServiceCandidate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Creates a 'ServiceCandidate'
      tags:
      - serviceCandidate
  /serviceCandidate/{id}:
    get:
      operationId: retrieveServiceCandidate
      parameters:
      - description: Identifier of the Service Candidate
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Ok
          schema:
            items:
              $ref: '#/definitions/ServiceCandidate'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Retrieves a 'ServiceCandidate' by Id
      tags:
      - serviceCandidate
    patch:
      operationId: updateServiceCandidatePatch
      parameters:
      - description: Identifier of the Service Candidate
        in: path
        name: id
        required: true
        type: string
      - description: The Service Candidate to be updated
        in: body
        name: serviceCandidate
        required: true
        schema:
          $ref: '#/definitions/ServiceCandidate_Update'
      responses:
        "201":
          description: Updated
          schema:
            $ref: '#/definitions/ServiceCandidate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Updates partially a 'ServiceCandidate' by Id
      tags:
      - serviceCandidate
    put:
      operationId: updateServiceCandidate
      parameters:
      - description: Identifier of the Service Candidate
        in: path
        name: id
        required: true
        type: string
      - description: The Service Candidate to be updated
        in: body
        name: serviceCandidate
        required: true
        schema:
          $ref: '#/definitions/ServiceCandidate_Update'
      responses:
        "201":
          description: Updated
          schema:
            $ref: '#/definitions/ServiceCandidate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Updates a 'ServiceCandidate' by Id
      tags:
      - serviceCandidate
  /serviceSpecification:
    get:
      operationId: listServiceSpecification
      parameters:
      - description: Comma separated properties to display in response
        in: query
        name: fields
        required: false
        type: string
      - description: 'For filtering: Service specification version'
        in: query
        name: version
        required: false
        type: string
      - description: 'For filtering: Date and time of the last update'
        format: date-time
        in: query
        name: lastUpdate
        required: false
        type: string
      - description: 'For filtering: Name of the service specification'
        in: query
        name: name
        required: false
        type: string
      - description: 'For filtering: Type of the service specification'
        in: query
        name: type
        required: false
        type: string
      - description: 'For filtering: isBundle determines whether a serviceSpecification
          represents a single serviceSpecification (false), or a bundle of serviceSpecification
          (true).'
        in: query
        name: isBundle
        required: false
        type: boolean
      - description: 'For filtering: Used to indicate the current lifecycle status'
        in: query
        name: lifecycleStatus
        required: false
        type: string
      - description: 'For filtering: An instant of time, starting at the TimePeriod'
        format: date-time
        in: query
        name: validFor.startDateTime
        required: false
        type: string
      - description: 'For filtering: An instant of time, ending at the TimePeriod.'
        format: date-time
        in: query
        name: validFor.endDateTime
        required: false
        type: string
      - description: 'For filtering: An identification number assigned to uniquely
          identity the specification'
        in: query
        name: serviceNumber
        required: false
        type: string
      - description: 'For filtering: Role of the related party.'
        in: query
        name: relatedParty.role
        required: false
        type: string
      - description: 'For filtering: Name of the related party'
        in: query
        name: relatedParty.name
        required: false
        type: string
      - description: 'For filtering: Name of the serviceSpecCharacteristic'
        in: query
        name: serviceSpecCharacteristic.name
        required: false
        type: string
      - description: 'For filtering: A kind of value that the characteristic can take
          on, such as numeric, text and so forth'
        in: query
        name: serviceSpecCharacteristic.valueType
        required: false
        type: string
      - description: 'For filtering: If true, the Boolean indicates that the serviceSpecCharacteristic
          is configurable'
        in: query
        name: serviceSpecCharacteristic.configurable
        required: false
        type: boolean
      - description: 'For filtering: Name of the requiredServiceSpecification'
        in: query
        name: serviceSpecification.name
        required: false
        type: string
      - description: 'For filtering: Service specification version'
        in: query
        name: serviceSpecification.version
        required: false
        type: string
      - description: 'For filtering: Type of relationship such as migration, substitution,
          dependency, exclusivity'
        in: query
        name: serviceSpecificationRelationship.type
        required: false
        type: string
      - description: 'For filtering: Name of the requiredResourceSpecification'
        in: query
        name: resourceSpecification.name
        required: false
        type: string
      - description: 'For filtering: Resource specification version'
        in: query
        name: resourceSpecification.version
        required: false
        type: string
      - description: 'For filtering: Attachment type such as video, picture'
        in: query
        name: attachment.type
        required: false
        type: string
      - description: 'For filtering: Uniform Resource Locator, is a web page address
          (a subset of URI)'
        in: query
        name: attachment.url
        required: false
        type: string
      - description: 'For filtering: Used to indicate the current lifecycle status'
        in: query
        name: bundledServiceSpecification.lifecycleStatus
        required: false
        type: string
      - description: 'For filtering: Name of the service specification'
        in: query
        name: bundledServiceSpecification.name
        required: false
        type: string
      responses:
        "200":
          description: Ok
          schema:
            items:
              $ref: '#/definitions/ServiceSpecification'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: List or find 'ServiceSpecification' objects
      tags:
      - serviceSpecification
    post:
      operationId: createServiceSpecification
      parameters:
      - description: The Service Specification to be created
        in: body
        name: serviceSpecification
        required: true
        schema:
          $ref: '#/definitions/ServiceSpecification_Create'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ServiceSpecification'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Creates a 'ServiceSpecification'
      tags:
      - serviceSpecification
  /serviceSpecification/{id}:
    get:
      operationId: retrieveServiceSpecification
      parameters:
      - description: Identifier of the Service Specification
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Ok
          schema:
            items:
              $ref: '#/definitions/ServiceSpecification'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Retrieves a 'ServiceSpecification' by Id
      tags:
      - serviceSpecification
    patch:
      operationId: updateServiceSpecificationPatch
      parameters:
      - description: Identifier of the Service Specification
        in: path
        name: id
        required: true
        type: string
      - description: The Service Specification to be updated
        in: body
        name: serviceSpecification
        required: true
        schema:
          $ref: '#/definitions/ServiceSpecification_Update'
      responses:
        "201":
          description: Updated
          schema:
            $ref: '#/definitions/ServiceSpecification'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Updates partially a 'ServiceSpecification' by Id
      tags:
      - serviceSpecification
    put:
      operationId: updateServiceSpecification
      parameters:
      - description: Identifier of the Service Specification
        in: path
        name: id
        required: true
        type: string
      - description: The Service Specification to be updated
        in: body
        name: serviceSpecification
        required: true
        schema:
          $ref: '#/definitions/ServiceSpecification_Update'
      responses:
        "201":
          description: Updated
          schema:
            $ref: '#/definitions/ServiceSpecification'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Updates a 'ServiceSpecification' by Id
      tags:
      - serviceSpecification
produces:
- application/json
schemes:
- https
swagger: "2.0"
